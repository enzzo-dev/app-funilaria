// <auto-generated />
using System;
using BodyShopAI.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BodyShopAI.Infra.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20240115232000_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BodyShopAI.Domain.Entities.Budget", b =>
                {
                    b.Property<Guid>("IdBudget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BudgetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCar")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("IdStatus")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserIdUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdBudget");

                    b.HasIndex("IdCar");

                    b.HasIndex("UserIdUser");

                    b.ToTable("budgets");
                });

            modelBuilder.Entity("BodyShopAI.Domain.Entities.Car", b =>
                {
                    b.Property<Guid>("IdCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("IdBudget")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("IdStatus")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdCar");

                    b.HasIndex("IdUser");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("BodyShopAI.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("IdStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClient")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("users");
                });

            modelBuilder.Entity("BodyShopAI.Domain.Entities.Budget", b =>
                {
                    b.HasOne("BodyShopAI.Domain.Entities.Car", "CarTarget")
                        .WithMany("Budgets")
                        .HasForeignKey("IdCar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BodyShopAI.Domain.Entities.User", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserIdUser");

                    b.Navigation("CarTarget");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BodyShopAI.Domain.Entities.Car", b =>
                {
                    b.HasOne("BodyShopAI.Domain.Entities.User", "User")
                        .WithMany("OwnCar")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BodyShopAI.Domain.Entities.Car", b =>
                {
                    b.Navigation("Budgets");
                });

            modelBuilder.Entity("BodyShopAI.Domain.Entities.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("OwnCar");
                });
#pragma warning restore 612, 618
        }
    }
}
